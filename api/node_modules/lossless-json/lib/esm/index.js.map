{"version":3,"file":"index.js","names":["config","compareLosslessNumber","isLosslessNumber","LosslessNumber","toLosslessNumber","parseLosslessNumber","parseNumberAndBigInt","parse","reviveDate","stringify","compareNumber","getUnsafeNumberReason","isInteger","isNumber","isSafeNumber","splitNumber","toSafeNumberOrThrow","UnsafeNumberReason"],"sources":["../../src/index.ts"],"sourcesContent":["export { config } from './config.js'\nexport {\n  compareLosslessNumber,\n  isLosslessNumber,\n  LosslessNumber,\n  toLosslessNumber\n} from './LosslessNumber.js'\nexport { parseLosslessNumber, parseNumberAndBigInt } from './numberParsers.js'\nexport { parse } from './parse.js'\nexport { reviveDate } from './reviveDate.js'\nexport { stringify } from './stringify.js'\nexport * from './types.js'\nexport {\n  compareNumber,\n  getUnsafeNumberReason,\n  isInteger,\n  isNumber,\n  isSafeNumber,\n  splitNumber,\n  toSafeNumberOrThrow,\n  UnsafeNumberReason\n} from './utils.js'\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,aAAa;AACpC,SACEC,qBAAqB,EACrBC,gBAAgB,EAChBC,cAAc,EACdC,gBAAgB,QACX,qBAAqB;AAC5B,SAASC,mBAAmB,EAAEC,oBAAoB,QAAQ,oBAAoB;AAC9E,SAASC,KAAK,QAAQ,YAAY;AAClC,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,cAAc,YAAY;AAC1B,SACEC,aAAa,EACbC,qBAAqB,EACrBC,SAAS,EACTC,QAAQ,EACRC,YAAY,EACZC,WAAW,EACXC,mBAAmB,EACnBC,kBAAkB,QACb,YAAY","ignoreList":[]}