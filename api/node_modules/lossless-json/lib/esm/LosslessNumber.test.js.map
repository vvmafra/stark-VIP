{"version":3,"file":"LosslessNumber.test.js","names":["expect","test","compareLosslessNumber","isLosslessNumber","LosslessNumber","toLosslessNumber","n","toBe","value","toThrow","toString","toEqual","undefined","Number","NaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","valueOf"],"sources":["../../src/LosslessNumber.test.ts"],"sourcesContent":["import { expect, test } from 'vitest'\nimport { compareLosslessNumber, isLosslessNumber, LosslessNumber, toLosslessNumber } from './index'\n\ntest('create a LosslessNumber from string', () => {\n  const n = new LosslessNumber('42')\n  expect(n.isLosslessNumber).toBe(true)\n  expect(n.value).toBe('42')\n})\n\ntest('throw an error when when creating a LosslessNumber from invalid string', () => {\n  // invalid\n  expect(() => new LosslessNumber('a')).toThrow(/Invalid number/)\n  expect(() => new LosslessNumber('22.')).toThrow(/Invalid number/)\n  expect(() => new LosslessNumber('0.2e')).toThrow(/Invalid number/)\n  expect(() => new LosslessNumber('2e3.4')).toThrow(/Invalid number/)\n  expect(() => new LosslessNumber('2.3.4')).toThrow(/Invalid number/)\n  expect(() => new LosslessNumber('+24')).toThrow(/Invalid number/)\n  expect(() => new LosslessNumber('   123')).toThrow(/Invalid number/)\n  expect(() => new LosslessNumber('123   ')).toThrow(/Invalid number/)\n\n  // valid\n  expect(new LosslessNumber('42e+4').toString()).toEqual('42e+4')\n  expect(new LosslessNumber('42E-4').toString()).toEqual('42E-4')\n  expect(new LosslessNumber('-42E-4').toString()).toEqual('-42E-4')\n})\n\ntest('test whether something is a LosslessNumber', () => {\n  const n = new LosslessNumber('42')\n  expect(isLosslessNumber(n)).toBe(true)\n  expect(isLosslessNumber(42)).toBe(false)\n  expect(isLosslessNumber(null)).toBe(false)\n  expect(isLosslessNumber({})).toBe(false)\n  expect(isLosslessNumber([])).toBe(false)\n  expect(isLosslessNumber(undefined)).toBe(false)\n})\n\ntest('create a LosslessNumber from number', () => {\n  expect(toLosslessNumber(42)).toEqual(new LosslessNumber('42'))\n  expect(toLosslessNumber(2.47)).toEqual(new LosslessNumber('2.47'))\n\n  expect(() => toLosslessNumber(2 / 3)).toThrow('Invalid number: contains more than 15 digits')\n  expect(() => toLosslessNumber(Number.NaN)).toThrow('Invalid number: NaN')\n  expect(() => toLosslessNumber(Number.POSITIVE_INFINITY)).toThrow('Invalid number: Infinity')\n  expect(() => toLosslessNumber(Number.NEGATIVE_INFINITY)).toThrow('Invalid number: -Infinity')\n})\n\ntest('compareLosslessNumber', () => {\n  expect(compareLosslessNumber(new LosslessNumber('5e3'), new LosslessNumber('70'))).toEqual(1)\n})\n\ntest('use LosslessNumber.valueOf()', () => {\n  // safe number\n  expect(new LosslessNumber('23.4').valueOf()).toBe(23.4)\n  expect(new LosslessNumber('23e4').valueOf()).toBe(230000)\n\n  // a decimal losing insignificant digits\n  expect(new LosslessNumber('0.66666666666666666666667').valueOf()).toEqual(0.6666666666666666)\n\n  // a big integer\n  expect(new LosslessNumber('123456789012345678901234').valueOf()).toEqual(\n    123456789012345678901234n\n  )\n\n  // overflow\n  expect(() => new LosslessNumber('2.3e+500').valueOf()).toThrow(\n    \"Cannot safely convert to number: the value '2.3e+500' would overflow and become Infinity\"\n  )\n\n  // underflow\n  expect(() => new LosslessNumber('2.3e-500').valueOf()).toThrow(\n    \"Cannot safely convert to number: the value '2.3e-500' would underflow and become 0\"\n  )\n})\n\ntest('can do operations like add a number and a LosslessNumber', () => {\n  // @ts-expect-error\n  expect(new LosslessNumber('3') + 2).toBe(5)\n})\n\ntest('LosslessNumber - toString', () => {\n  expect(new LosslessNumber('23.4').toString()).toBe('23.4')\n})\n"],"mappings":"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","ignoreList":[]}